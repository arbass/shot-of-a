"use strict";(()=>{var P=()=>{document.querySelectorAll("[location-dropdown]").length&&setTimeout(function(){let t="New York",s=document.querySelectorAll("[section_menu] [location-dropdown_button]"),r=document.querySelector('[is-your-city-new-york="yes"]'),u=document.querySelector('[is-your-city-new-york="no"]'),p=document.querySelector('[is-your-city-new-york="ok"]'),h=document.querySelector("[city-detector-tip-close]"),i=document.querySelector("[city-detector-tip]"),d=document.querySelector("[city-guess]"),S=document.querySelector("[city-question]"),n=document.querySelector("[location-dropdown_list]"),e;function o(){console.log("func_locationApi stared");let c;navigator.geolocation&&navigator.geolocation.getCurrentPosition(a,b);function a(w){let L=w.coords.latitude,v=w.coords.longitude;T(L,v)}function b(){console.log("Geocoder failed")}function q(){c=new google.maps.Geocoder}function T(w,L){let v=new google.maps.LatLng(w,L);c.geocode({latLng:v},function(A,x){if(x==google.maps.GeocoderStatus.OK)if(A[1]){let m;for(let f=0;f<A[0].address_components.length;f++)for(let C=0;C<A[0].address_components[f].types.length;C++)if(A[0].address_components[f].types[C]=="locality"){m=A[0].address_components[f];break}m?(console.log(m.long_name),s.forEach(f=>{f.textContent.toUpperCase()===m.long_name.toUpperCase()?(console.log("\u0433\u043E\u0440\u043E\u0434 \u0441\u043E\u0432\u043F\u0430\u043B"),e=f,l()):(console.log("\u0433\u043E\u0440\u043E\u0434 \u043D\u0435 \u0441\u043E \u0441\u043F\u0438\u0441\u043A\u043E\u043C \u0441\u043E\u0432\u043F\u0430\u043B"),s.forEach(C=>{C.textContent.toUpperCase()===t.toUpperCase()&&(console.log("\u0432\u044B\u0437\u044B\u0432\u0430\u0435\u043C defaultCity"),e=C,l())}))})):(console.log("City not found"),s.forEach(f=>{f.textContent.toUpperCase()===t.toUpperCase()&&(console.log("\u0432\u044B\u0437\u044B\u0432\u0430\u0435\u043C defaultCity"),e=f,l())}))}else console.log("No results found"),s.forEach(m=>{m.textContent.toUpperCase()===t.toUpperCase()&&(console.log("\u0432\u044B\u0437\u044B\u0432\u0430\u0435\u043C defaultCity"),e=m,l())});else console.log("Geocoder failed due to: "+x),s.forEach(m=>{m.textContent.toUpperCase()===t.toUpperCase()&&(console.log("\u0432\u044B\u0437\u044B\u0432\u0430\u0435\u043C defaultCity"),e=m,l())})})}q()}r.addEventListener("click",function(){y(e)}),u.addEventListener("click",function(){setTimeout(function(){i.classList.add("hide"),n.classList.add("w--open")},0)}),h.addEventListener("click",function(){i.classList.add("hide")});function l(){d.textContent=e.textContent,i.classList.remove("hide")}function y(c){let a=c.getAttribute("location-dropdown_button"),b=c.getAttribute("href");localStorage.setItem("savedCity",a),console.log(`\u0413\u043E\u0440\u043E\u0434 ${a} \u0441\u043E\u0445\u0440\u0430\u043D\u0451\u043D \u0432 localStorage.`),i.classList.add("hide"),window.location.href=b}function g(c){let a=c.getAttribute("location-dropdown_button");document.querySelectorAll("[city-dropdown-name-placeholder]").forEach(q=>{q.textContent=a})}if(localStorage.getItem("savedCity")){let c=localStorage.getItem("savedCity");E(c),console.log(`\u0421\u043E\u0445\u0440\u0430\u043D\u0451\u043D\u043D\u044B\u0439 \u0433\u043E\u0440\u043E\u0434: ${c}`)}else console.log("\u0421\u043E\u0445\u0440\u0430\u043D\u0451\u043D\u043D\u043E\u0433\u043E \u0433\u043E\u0440\u043E\u0434\u0430 \u043D\u0435\u0442"),o();s.forEach(c=>{c.addEventListener("click",function(){y(c),g(c)})});function E(c){s.forEach(a=>{a.getAttribute("location-dropdown_button").toUpperCase()===c.toUpperCase()&&g(a)})}},2e3)};var k=()=>{let _=document.querySelector("[catalog-page-city]");if(_){let t=_.getAttribute("catalog-page-city");document.querySelectorAll("[exp-collection-item]").forEach(r=>{function u(){let d=r.querySelector("[exp-columns_slider-header-meta-item=best]"),n=r.getAttribute("value-best").split(";");n.forEach((e,o)=>{e===""&&n.splice(o,1)}),n.forEach(e=>{e===t&&d.classList.remove("hide")})}function p(){let d=document.querySelectorAll("[icon-age]"),S=r.querySelector("[exp-columns_slider-header-meta-item=age]"),e=r.getAttribute("value-age").split(";");e.forEach((o,l)=>{o===""&&e.splice(l,1)}),e.forEach(o=>{let l=o.split("@");l[0]===t&&d.forEach(y=>{let g=y.getAttribute("icon-age");if(l[1]===g){let E=y,c=S,a=document.createElement("div");a.innerHTML=E.innerHTML,c.appendChild(a)}})})}function h(){let d=r.querySelector("[exp-columns_slider-header-meta-item=price]"),n=r.getAttribute("value-price").split(";");n.forEach((e,o)=>{e===""&&n.splice(o,1)}),n.forEach(e=>{let o=e.split("@");if(o[0]===t){let l=o[0],y=o[1];if(l===t){d.classList.remove("hide");let g=d.querySelector('[exp-columns_slider-header-meta-item="price-text-value"]');g.textContent=y}}})}function i(){let d=r.querySelector("[exp-columns_slider-header-meta-item=count]"),n=r.getAttribute("value-count").split(";");n.forEach((e,o)=>{e===""&&n.splice(o,1)}),n.forEach(e=>{let o=e.split("@");if(o[0]===t){let l=o[0],y=o[1];if(l===t){d.classList.remove("hide");let g=d.querySelector('[exp-columns_slider-header-meta-item="count-text-value"]');g.textContent=y}}})}u(),p(),h(),i()})}};var U=()=>{document.querySelectorAll('[form-custom-dropdwn="component"]').length&&document.querySelectorAll('[form-custom-dropdwn="component"]').forEach(t=>{t.addEventListener("change",s=>{if(s.target.type==="radio"){let r=s.target,u=t.querySelector(`[form-custom-dropdwn="radio-label"][for="${r.id}"]`),p=t.querySelector('[form-custom-dropdwn="placeholder"]');u&&p&&(p.textContent=u.textContent,p.classList.add("label-is-active"),console.log(`Radio selected: ${u.textContent}`)),u&&u.classList.add("label-is-active"),t.querySelectorAll('[form-custom-dropdwn="radio-label"]').forEach(i=>{i!==u&&i.classList.remove("label-is-active")})}})})};var V=()=>{let _=document.querySelectorAll("[colored-slider]");_.length&&_.forEach(t=>{let r=t.getAttribute("colored-slider").split(",").map(p=>p.trim());t.querySelectorAll(".swiper-slide").forEach((p,h)=>{let i=h%r.length;console.log(`Applying color ${r[i]} to slide ${h}`),p.style.backgroundColor=r[i]})})};window.Webflow||(window.Webflow=[]);window.Webflow.push(()=>{P(),U(),k(),V()});})();
